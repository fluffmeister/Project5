{"version":3,"sources":["components/layouts/SignedinLinks.js","store/actions/authActions.js","components/layouts/SignedOutLinks.js","components/layouts/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SingedOutLinks","state","console","log","firebase","links","uid","SignedinLinks","SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","class","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layouts_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0QAwBeA,cAAQ,KANI,SAACC,GAC1B,MAAM,CACJC,QAAQ,kBAAMD,ECJP,SAACA,EAAWE,EAAZC,IACcC,EAD4BD,EAAlBC,eAGlBC,OAAOJ,UAAUK,KAAK,WAC3BN,EAAS,CAAEO,KAAM,2BDIdR,CAnBM,SAACS,GAElB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,YACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAC7BJ,EAAMQ,QAAQC,cECNC,EAVO,WAClB,OACET,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,aACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCuBKf,cAVS,SAACoB,GAErB,OADAC,QAAQC,IAAIF,GACN,CACFd,KAAMc,EAAMG,SAASjB,KACrBW,QAASG,EAAMG,SAASN,UAMjBjB,CAxBA,SAACS,GAAU,IACdH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QAERO,EAAQlB,EAAKmB,IAAKf,EAAAC,EAAAC,cAACc,EAAD,CAAeT,QAASA,IAAaP,EAAAC,EAAAC,cAACe,EAAD,MAC7D,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,cAAvB,iBACEW,uBCiBHI,EA5BM,SAACnB,GAAS,IACnBoB,EAAkBpB,EAAlBoB,cAER,OADAR,QAAQC,IAAIb,EAAMoB,cAAc,oBAE5BnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACIH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAERgB,GAAiBA,EAAcC,IAAK,SAAAC,GAClC,OACIrB,EAAAC,EAAAC,cAAA,MAAIoB,IAAKD,EAAKE,IACVvB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAakB,EAAKG,KAAlC,KACAxB,EAAAC,EAAAC,cAAA,YAAOmB,EAAKI,SACZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVuB,IAAOL,EAAKM,KAAKC,UAAUC,mBCJrDC,EAZQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACrB,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kCACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc6B,EAAQC,OACtCjC,EAAAC,EAAAC,cAAA,sBAAc8B,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDnC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAauB,IAAOM,EAAQI,UAAUR,SAASS,YAAYC,eCYzEC,EAhBI,SAAAR,GAAe,IAAbS,EAAaT,EAAbS,SACjB,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXqC,GAAYA,EAASpB,IAAI,SAAAY,GACvB,OACIhC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,aAAe2B,EAAQT,GAAID,IAAKU,EAAQT,IAChDvB,EAAAC,EAAAC,cAACuC,EAAD,CAAgBT,QAASA,yBCDvCU,mLACM,IAAAC,EAEqCC,KAAK7C,MAAtCyC,EAFJG,EAEIH,SAAU5C,EAFd+C,EAEc/C,KAAMuB,EAFpBwB,EAEoBxB,cAExB,OADAR,QAAQC,IAAIO,EAAc,UACrBvB,EAAKmB,IAETf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC2C,EAAD,CAAaL,SAAUA,KAE3BxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC4C,EAAD,CAAe3B,cAAeA,OARpBnB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,mBALnB2C,aA8BTC,cACX3D,YAXoB,SAACoB,GAErB,MAAO,CACH8B,SAAS9B,EAAMwC,UAAUC,QAAQX,SACjC5C,KAAKc,EAAMG,SAASjB,KACpBuB,cAAeT,EAAMwC,UAAUC,QAAQhC,iBAO3CiC,2BAAiB,CACb,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAY,SAChD,CAAED,WAAY,gBAAiBE,MAAM,EAAGD,QAAS,CAAC,OAAO,WAJlDL,CAMbP,GCTF,IAYgBO,cACZ3D,YAboB,SAACoB,EAAO8C,GAE5B,IAAMjC,EAAKiC,EAASC,MAAMC,OAAOnC,GAC3BiB,EAAW9B,EAAMwC,UAAUS,KAAKnB,SAEtC,MAAO,CACHR,QAFYQ,EAAWA,EAASjB,GAAM,KAGtC3B,KAAMc,EAAMG,SAASjB,QAOzBwD,2BAAiB,CACb,CAAEC,WAAW,cAHLJ,CA1ChB,SAAwBlD,GAAO,IACnBiC,EAAkBjC,EAAlBiC,QACR,OAD0BjC,EAATH,KACPmB,IAENiB,EAEIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAe6B,EAAQC,OACvCjC,EAAAC,EAAAC,cAAA,aAAK8B,EAAQP,QAAb,MAGJzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACPH,EAAAC,EAAAC,cAAA,wBAAgB8B,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClDnC,EAAAC,EAAAC,cAAA,WAAMwB,IAAOM,EAAQI,UAAUR,SAASS,YAAYC,eAOpEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,iCArBaF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,sBCFjCuD,6MACFlD,MAAM,CACFmD,MAAM,GACNC,SAAS,MAEbC,aAAc,SAACC,GACXC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO9C,GAAIyC,EAAEK,OAAOC,WAG/BC,aAAa,SAACP,GACVA,EAAEQ,iBACFP,EAAKlE,MAAM0E,OAAOR,EAAKvD,gFAGlB,IAAAiC,EACuBC,KAAK7C,MAAzB2E,EADH/B,EACG+B,UACR,OAFK/B,EACc/C,KACVmB,IAAYf,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,MAE9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAMyE,SAAU/B,KAAK2B,aAAcpE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,SAAf,SACA5E,EAAAC,EAAAC,cAAA,KAAG2E,MAAM,uBAAT,QACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQyB,GAAG,QAAQuD,SAAUlC,KAAKmB,gBAElD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,KAAG2E,MAAM,wBAAT,QACI7E,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,YAAf,YACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWyB,GAAG,WAAWuD,SAAUlC,KAAKmB,gBAExD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yDAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVuE,EAAY1E,EAAAC,EAAAC,cAAA,SAAIwE,GAAiB,gBAnCzC1B,aA0DN1D,cAdS,SAACoB,GACrB,MAAO,CACHgE,UAAWhE,EAAMd,KAAK8E,UACtB9E,KAAMc,EAAMG,SAASjB,OAIF,SAACL,GACxB,MAAO,CACHkF,OAAQ,SAACM,GAAD,OAAWxF,GR5DHyF,EQ4DmBD,ER3DjC,SAACxF,EAAUE,EAAXsC,IACepC,EADyBoC,EAAjBpC,eAGhBC,OAAOqF,2BACZD,EAAYnB,MACZmB,EAAYlB,UACdjE,KAAK,WACHN,EAAS,CAAEO,KAAM,oBAClBoF,MAAM,SAACC,GACN5F,EAAS,CAAEO,KAAM,cAAeqF,aAVtB,IAAEH,KQiET1F,CAA6CsE,GC5DtDwB,6MACF1E,MAAM,CACFmD,MAAM,GACNC,SAAS,GACTuB,UAAU,GACVC,SAAS,MAEbvB,aAAc,SAACC,GACXC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO9C,GAAIyC,EAAEK,OAAOC,WAG/BC,aAAa,SAACP,GACVA,EAAEQ,iBACFP,EAAKlE,MAAMwF,OAAOtB,EAAKvD,gFAGlB,IAAAiC,EACuBC,KAAK7C,MAAzBH,EADH+C,EACG/C,KAAM8E,EADT/B,EACS+B,UACd,OAAI9E,EAAKmB,IAAYf,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,MAE9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAMyE,SAAU/B,KAAK2B,aAAcpE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,SAAf,SACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQyB,GAAG,QAAQuD,SAAUlC,KAAKmB,gBAElD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,YAAf,YACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWyB,GAAG,WAAWuD,SAAUlC,KAAKmB,gBAExD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,aAAf,cACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOyB,GAAG,YAAYuD,SAAUlC,KAAKmB,gBAErD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,YAAf,aACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOyB,GAAG,WAAWuD,SAAUlC,KAAKmB,gBAGpD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yDAAlB,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACTuE,EAAY1E,EAAAC,EAAAC,cAAA,SAAKwE,GAAkB,gBA5C5C1B,aAiEN1D,cAbS,SAAEoB,GACtB,MAAM,CACFd,KAAMc,EAAMG,SAASjB,KACrB8E,UAAWhE,EAAMd,KAAK8E,YAGH,SAAEnF,GACzB,MAAO,CACHgG,OAAQ,SAACC,GAAD,OAAajG,ETxCP,SAACiG,GACnB,OAAM,SAACjG,EAAUE,EAAXgG,GAAoD,IAA9B9F,EAA8B8F,EAA9B9F,YAAa+F,EAAiBD,EAAjBC,aAC/B7E,EAAWlB,IACXuD,EAAYwC,IAElB7E,EAASjB,OAAO+F,+BACZH,EAAQ3B,MACR2B,EAAQ1B,UACVjE,KAAK,SAAC+F,GACJ,OAAO1C,EAAUG,WAAW,SAASwC,IAAID,EAAIpE,KAAKT,KAAK+E,IAAI,CACvDT,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB9E,SAAUgF,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAEvDzF,KAAK,WACJN,EAAS,CAAEO,KAAM,qBAClBoF,MAAM,SAAAC,GACL5F,EAAS,CAAEO,KAAM,eAAgBqF,WSuBPI,CAAOC,OAK9BlG,CAA4C8F,WCjErDW,6MACFrF,MAAM,CACJuB,MAAM,GACNR,QAAQ,MAEVsC,aAAc,SAACC,GACXC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO9C,GAAIyC,EAAEK,OAAOC,WAG/BC,aAAa,SAACP,GACVA,EAAEQ,iBAEFP,EAAKlE,MAAMiG,cAAc/B,EAAKvD,OAC9BuD,EAAKlE,MAAMkG,QAAQC,KAAK,8EAKxB,OADiBtD,KAAK7C,MAAdH,KACEmB,IAENf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMyE,SAAU/B,KAAK2B,aAAcpE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,SAAf,SACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOyB,GAAG,QAAQuD,SAAUlC,KAAKmB,gBAEjD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,WAAf,mBACA5E,EAAAC,EAAAC,cAAA,YAAUqB,GAAG,UAAUpB,UAAU,uBAAuB2E,SAAUlC,KAAKmB,gBAE3E/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,aAdMH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,mBAnBf2C,aAyDb1D,cAhBS,SAACoB,GACrB,MAAO,CACHd,KAAMc,EAAMG,SAASjB,OAIJ,SAACL,GACtB,MAAM,CAIFyG,cAAc,SAAChE,GAAD,OAAYzC,ECzDP,SAACyC,GACxB,OAAM,SAACzC,EAAUE,EAAXsC,GAAoDA,EAA9BpC,YAA8B,IAIhDuD,GAAYwC,EAJoC3D,EAAjB2D,gBAK/BnF,EAAUd,IAAWoB,SAASN,QAC9B4F,EAAW1G,IAAWoB,SAASjB,KAAKmB,IAE1CmC,EAAUG,WAAW,YAAY+C,IAAjCjC,OAAAkC,EAAA,EAAAlC,CAAA,GACOnC,EADP,CAEIE,gBAAiB3B,EAAQ8E,UACzBlD,eAAgB5B,EAAQ+E,SACxBa,SAASA,EACT/D,UAAW,IAAIkE,QAChBzG,KAAK,WACJN,EAAS,CAACO,KAAK,iBAAkBkC,QAAQA,MAC1CkD,MAAM,SAACC,GACN5F,EAAS,CAAEO,KAAK,uBAAwBqF,WDuCTa,CAAchE,OAK1C1C,CAA4CyG,GElC5CQ,mLAjBT,OACEvG,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsG,EAAD,MACExG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACE/C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAO0D,OAAK,EAACC,KAAK,IAAIC,UAAWjE,IACjC1C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAO2D,KAAK,gBAAgBC,UAAWC,IACvC5G,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAO2D,KAAK,UAAUC,UAAW/C,IACjC5D,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAO2D,KAAK,UAAUC,UAAWvB,IACjCpF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAO2D,KAAK,UAAUC,UAAWZ,cAX7B/C,aCGE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvD,MACvB,2DClBN,IAAMwD,EAAU,CACZvC,UAAW,MAsCAwC,EAnCK,WAA+B,IAA7BxG,EAA6ByG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBF,EAAWK,EAAUH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE/C,OAAOC,EAAOxH,MACV,IAAK,cAED,OADAa,QAAQC,IAAI,eACLuD,OAAAkC,EAAA,EAAAlC,CAAA,GACAzD,EADP,CAEIgE,UAAW,iBAEnB,IAAK,gBAED,OADA/D,QAAQC,IAAI,iBACZuD,OAAAkC,EAAA,EAAAlC,CAAA,GACOzD,EADP,CAEIgE,UAAU,OAElB,IAAK,kBAED,OADA/D,QAAQC,IAAI,mBACLF,EACX,IAAK,iBAED,OADAC,QAAQC,IAAI,kBACLuD,OAAAkC,EAAA,EAAAlC,CAAA,GACAzD,EADP,CAEIgE,UAAU,OAElB,IAAK,eAED,OADA/D,QAAQC,IAAI,gBACZuD,OAAAkC,EAAA,EAAAlC,CAAA,GACOzD,EADP,CAEIgE,UAAW4C,EAAOnC,IAAIoC,UAE9B,QACI,OAAO7G,ICnCbuG,EAAU,CACZzE,SAAS,CACL,CAACjB,GAAG,IAAIU,MAAM,YAAYR,QAAQ,uCAClC,CAACF,GAAG,IAAIU,MAAM,YAAYR,QAAQ,uCAClC,CAACF,GAAG,IAAIU,MAAM,YAAYR,QAAQ,yCAkB3B+F,EAbQ,WAA+B,IAA7B9G,EAA6ByG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBF,EAAWK,EAAUH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAOC,EAAOxH,MACV,IAAK,iBAED,OADAa,QAAQC,IAAI,kBAAmB0G,EAAOtF,SAC/BtB,EACX,IAAK,uBAED,OADAC,QAAQC,IAAI,uBAAwB0G,EAAOnC,KACpCzE,EACX,QACI,OAAOA,YCDJ+G,EARKC,YAAgB,CAChC9H,KAAKsH,EACLlF,QAAQwF,EAERtE,UAAWyE,mBACX9G,SAAU+G,4DCEZ/G,IAASgH,cAVY,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,wCAKTvH,IAASqC,YAAYmF,SAAS,CAACC,uBAAsB,IAGtCzH,QAAf,ECLI0H,EAAQC,YAAYf,EAEtBxE,YAEIwF,YAAgBC,IAAMC,kBAAkB,CAAEhJ,0BAAa+F,+BACvDkD,yBAAeC,GACfC,6BAAmBD,EAAU,CAAEE,wBAAuB,EAAMC,YAAY,QAASC,mBAAmB,MAI5GV,EAAMW,oBAAoBrJ,KAAK,WAC3BsJ,IAASC,OAAOpJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAUd,MAAOA,GAAOvI,EAAAC,EAAAC,cAACoJ,EAAD,OAAoBC,SAASC,eAAe,SLsGlF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9J,KAAK,SAAA+J,GACjCA,EAAaC","file":"static/js/main.6b8c9e65.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks =(props) => {\n    \n    return(\n      <ul className='right'>\n      <li><NavLink to='/create'>New Project</NavLink></li>\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n      {props.profile.initials}\n      </NavLink></li>\n      </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return{ \n    signOut:() => dispatch(signOut())\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = ( credentials ) =>{\n    return(dispatch, getState, { getFirebase}) => { \n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({ type: 'LOGIN_ERROR', err});\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch , getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(()=>{\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        });\n    }\n}\n\nexport const signUp = (newUser) =>{\n    return(dispatch, getState, {getFirebase, getFirestore}) =>{\n        const firebase = getFirebase(); \n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res)=>{\n            return firestore.collection('users').doc(res.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]//concats the first initials\n            })\n        }).then(()=>{\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err=>{\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nconst SingedOutLinks =() => {\n    return(\n      <ul className='right'>\n      <li><NavLink to='/signup'>Register</NavLink></li>\n      <li><NavLink to='/signin'>Login</NavLink></li>\n      \n      </ul>\n    )\n}\n\nexport default SingedOutLinks;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport SignedInLinks from './SignedinLinks' \nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    // console.log(auth)\n    const links = auth.uid ?<SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">Message Board</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) =>{ \n    console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications =(props) =>{\n    const { notifications } = props;\n    console.log(props.notifications,'inside component')\n    return(\n        <div className='section'>\n           <div className='card z-depth-0'>\n            <div className='card-content'>\n                <span className='card-title'>Notifications</span>\n                    <ul className='notification'>\n                        \n                        { notifications && notifications.map( item=>{\n                            return (\n                                <li key={item.id}>\n                                    <span className='pink-text'>{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className='grey-text note-date'>\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n            </div>\n           </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React  from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className= 'card z-depth-0 project-summary'>\n            <div className='card-content grety-text text-darken-3'>\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className='grey-text'>{moment(project.createdAt.toDate().toString()).calendar()}</p>           \n            </div>\n         </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\n\nconst ProjectList =({projects}) =>{\n    return(\n        <div className='project-list section'>\n          { projects && projects.map(project => {\n              return(\n                  <Link to={'/projects/' + project.id} key={project.id}>\n                    <ProjectSummary project={project} />\n                  \n                  </Link>\n              )\n          })}\n\n        </div>\n    )\n}\n\nexport default ProjectList;","import React ,{Component} from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from  'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n    render(){\n    \n        const { projects, auth, notifications }= this.props;\n        console.log(notifications,'======')\n        if (!auth.uid) return <Redirect to='/signin' /> \n        return(\n         <div className='container'>\n            <div className='row'>\n                <div className='col s12 m6'>\n                    <ProjectList projects={projects} />\n                </div>\n                <div className='col s12 m5 offset-m1'>\n                    <Notifications notifications={notifications} />\n                </div>\n            </div>\n         </div>   \n        )\n    }\n}\nconst mapStateToProps = (state) =>{\n    // console.log(state)\n    return {\n        projects:state.firestore.ordered.projects,\n        auth:state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt','desc'] },\n        { collection: 'notifications', limit:3, orderBy: ['time','desc'] }\n    ])\n)(Dashboard);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nfunction ProjectDetails(props) {\n    const { project, auth } = props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    \n    if (project) {\n        return(\n            <div className='container section propject-details'>\n                <div className='card z-depth-0'>\n                    <div className='card-content'>\n                        <span className='card-title'>{ project.title }</span>\n                        <p> {project.content} </p>\n                    </div>\n\n                    <div className='card-action grey lighten-4 grey-text'>\n                            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                            <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n                    </div>        \n                </div>\n            </div> \n        )\n    } else {\n        return (\n            <div className='container center'>\n             <p> Loading Project...</p>\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state, ownProps)=>{\n    \n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects   \n    const project = projects ? projects[id] : null \n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\n\nexport default  compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection:'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass SignIn extends Component {\n    state={\n        email:'',\n        password:''\n    }\n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' /> \n        return (\n            <div className='container z-depth-5'>\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className='grey-text text-darken-3'>Sign In</h5>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <i class=\"tiny material-icons\">mail</i> \n                        <input type='email' id='email' onChange={this.handleChange}/>\n                    </div>\n                    <div className='input-field'>\n                    <i class=\"tiny  material-icons\">lock</i> \n                        <label htmlFor='password'>Password</label>\n                        <input type='password' id='password' onChange={this.handleChange}/>\n                    </div>\n                    <div className='input-field'>\n                        <button className='waves-effect waves-light btn pink lighten-1 z-depth-5'>Login</button>\n                        <div className='red-text center'>\n                           { authError ? <p>{authError}</p> : null } \n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{  \n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch )=> {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state={\n        email:'',\n        password:'',\n        firstName:'',\n        lastName:''\n    }\n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' /> \n        return (\n            <div className='container z-depth-5'>\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className='grey-text text-darken-3'>Register</h5>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input type='email' id='email' onChange={this.handleChange}/>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='password'>Password</label>\n                        <input type='password' id='password' onChange={this.handleChange}/>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='firstName'>First Name</label>\n                        <input type='text' id='firstName' onChange={this.handleChange}/>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='lastName'>Last Name</label>\n                        <input type='text' id='lastName' onChange={this.handleChange}/>\n                    </div>\n                    \n                    <div className='input-field'>\n                        <button className='waves-effect waves-light btn pink lighten-1 z-depth-5'>Register</button>\n                        <div className='red-text center'>\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = ( state ) =>{\n    return{\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\nconst mapDispatchToProps = ( dispatch ) =>{\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state={\n      title:'',\n      content:''\n    }\n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        // console.log(this.state)\n        this.props.createProject(this.state)\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' /> \n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className='grey-text text-darken-3'>Create Project</h5>\n                    <div className='input-field'>\n                        <label htmlFor='title'>Title</label>\n                        <input type='text' id='title' onChange={this.handleChange}/>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='content'>Project Content</label>\n                        <textarea id=\"content\" className='materialize-textarea' onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className='input-field'>\n                        <button className='btn pink lighten-1 z-depth-0'>Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        //returns to the projectActions for the async to db\n\n        //function takes this.state\n        createProject:(project)=> dispatch(createProject(project))\n    }\n}\n\n//first param for connect is to map out\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\n","export const createProject=(project) =>{\n    return(dispatch, getState,{ getFirebase, getFirestore })=>{\n        //async call for db\n\n        //reference to the firestore database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n         \n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId:authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type:'CREATE_PROJECT', project:project});\n        }).catch((err) => {\n            dispatch({ type:'CREATE_PROJECT_ERROR', err });\n        })\n    }\n};","import React,{Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layouts/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render(){\n      return (\n        <BrowserRouter>\n        <div className=\"app\" >\n          <Navbar/>\n            <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Route path='/projects/:id' component={ProjectDetails} />\n              <Route path='/signin' component={SignIn}/>\n              <Route path='/signup' component={SignUp}/>\n              <Route path='/create' component={CreateProject}/>\n            </Switch>\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\n    authError: null\n}\n\nconst authReducer = ( state = initState, action) =>{\n    \n    switch(action.type){\n        case 'LOGIN_ERROR': \n            console.log('Login error')\n            return {\n                ...state,\n                authError: 'Login falied'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login success')\n            return{\n                ...state,\n                authError:null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('Signout success')\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError:null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return{\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n \nexport default authReducer;","const initState={\n    projects:[\n        {id:'1',title:'testing 1',content:'red blue yellow green purple orange'},\n        {id:'2',title:'testing 2',content:'red blue yellow green purple orange'},\n        {id:'3',title:'testing 3',content:'red blue yellow green purple orange'},\n    ]\n\n}\n\nconst projectReducer = ( state = initState, action) =>{\n    switch(action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;     \n    }  \n}\n \nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\n\n\nconst rootReducer = combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    //will sync our datat to the db\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;\n"," import firebase from 'firebase/app'\n import 'firebase/firestore'\n import 'firebase/auth'\n \n \n // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDn8pZvWnIyphR_E9V4w9daVghdzb1envo\",\n    authDomain: \"project5messageboard.firebaseapp.com\",\n    databaseURL: \"https://project5messageboard.firebaseio.com\",\n    projectId: \"project5messageboard\",\n    storageBucket: \"project5messageboard.appspot.com\",\n    messagingSenderId: \"205347778508\",\n    appId: \"1:205347778508:web:17c282b58ed5030e\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig); \n\n  firebase.firestore().settings({timestampsInSnapshots:true});\n\n\n  export default firebase;\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\n//thunk sets up the async for redux\nimport thunk from 'redux-thunk'\n///access firestore/firebase api\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n                                                            \nconst store = createStore(rootReducer, \n    //compose alows more store enchancers\n    compose(\n        //gives extra argument to the projectactions\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),//allows getFirestore\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady: true })//allows getFirebase\n    )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n    \n})\n\n// registerServiceWorker();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}